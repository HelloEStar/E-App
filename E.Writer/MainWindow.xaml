<Window x:Name="Main" x:Class="E.Writer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:E.Writer"
        mc:Ignorable="d"
        Title="E Writer" Height="800" Width="1000" MinWidth="600" MinHeight="580" AllowDrop="True" WindowStartupLocation="CenterScreen" Foreground="Black" Background="Black" Icon="图片/E Writer.ico"
        KeyUp="Main_KeyUp" Loaded="Main_Loaded" Closing="Main_Closing" >

    <!--自定义控件模板-->
    <Window.Resources>
        <!--颜色-->
        <SolidColorBrush x:Key="一级字体颜色" Color="Black" />
        <SolidColorBrush x:Key="二级字体颜色" Color="#FF3C3C3C" />
        <SolidColorBrush x:Key="三级字体颜色" Color="#FF787878" />
        <SolidColorBrush x:Key="一级背景颜色" Color="Gainsboro" />
        <SolidColorBrush x:Key="二级背景颜色" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="三级背景颜色" Color="White" />
        <SolidColorBrush x:Key="一级边框颜色" Color="#FFA0A0A0" />
        <SolidColorBrush x:Key="有焦点选中颜色" Color="#7F007FFF"/>
        <SolidColorBrush x:Key="无焦点选中颜色" Color="#7F7FC8FF"/>
        <Color x:Key="SelectedBackgroundColor">#7F007FFF</Color>
        <Color x:Key="SelectedUnfocusedColor2">#7F7FC8FF</Color>

        <!--按钮样式-->
        <Style x:Key="菜单按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource 一级边框颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="border" Property="BorderThickness" Value="6,0,0,0"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="工具按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="自由按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--标签样式-->
        <Style x:Key="标题标签样式" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="自由标签样式" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--检查框样式-->
        <Style x:Key="检查框样式" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <!--下拉框样式2-->
        <Style x:Key="下拉框样式2" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <!--下拉框样式-->
        <Style x:Key="下拉框样式" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

            <Setter Property="ItemContainerStyle" Value="{DynamicResource 下拉框子项样式}"/>
            <Setter Property="Template" Value="{DynamicResource 下拉框模板}"/>
        </Style>
        <!--下拉框模板-->
        <ControlTemplate x:Key="下拉框模板" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource 一级边框颜色}" BorderThickness="1" Background="{DynamicResource 三级背景颜色}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" Background="{DynamicResource 三级背景颜色}"/>
                                <!--<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"><!--CornerRadius="4"-->
                    <Grid>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource 下拉框切换按钮样式}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">  
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>  
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>  
                    </Trigger>-->
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="60"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--下拉框切换按钮样式-->
        <Style x:Key="下拉框切换按钮样式" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="splitBorder" Width="30" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" 
                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" Stretch="Fill" Height="10" Width="12" HorizontalAlignment="Center" Fill="{DynamicResource 三级字体颜色}" Data="M 50,50 L 0,0 100,0 z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource 三级字体颜色}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 下拉框子项样式 -->
        <Style x:Key="下拉框子项样式" TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Back" BorderThickness="0,0,0,0">
                            <ContentPresenter ContentSource="{Binding Source}" HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="{DynamicResource 无焦点选中颜色}"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="{DynamicResource 有焦点选中颜色}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--文本输入框样式-->
        <Style x:Key="文本输入框样式" TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--文本显示框样式-->
        <Style x:Key="文本显示框样式" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource 二级字体颜色}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
        </Style>

        <!--流式面板样式-->
        <Style x:Key="水平流式面板样式" TargetType="WrapPanel">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="ItemWidth" Value="60"/>
            <Setter Property="ItemHeight" Value="30"/>
        </Style>

        <!--树状图样式-->
        <Style x:Key="树状图样式" TargetType="TreeView">
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <!--<Setter Property="BorderThickness" Value="0"/>-->
            <Setter Property="Margin" Value="0"/>
            <!--<Setter Property="Padding" Value="0,5"/>-->
            <Setter Property="ItemContainerStyle" Value="{DynamicResource 树状图子项样式}"></Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border" CornerRadius="0" BorderThickness="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                            </Border.Background>
                            <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--树状图ToggleButton样式-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="20"  Height="20" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Data="M 0 0 L 8 5 L 0 10 Z" Fill="{DynamicResource 三级字体颜色}"></Path>
                            <Path x:Name="Expanded" HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="0" Data="M 0 0 L 10 0 L 5 8 Z" Fill="{DynamicResource 三级字体颜色}" Visibility="Hidden"></Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--树状图子项焦点可视样式-->
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeThickness="5" Stroke="Red" StrokeDashArray="1 2" Opacity="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--树状图子项样式-->
        <Style x:Key="树状图子项样式" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />

            <Setter Property="ItemContainerStyle" Value="{DynamicResource 树状图子项样式}"></Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="20"  Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background). (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"  Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"  Storyboard.TargetProperty="(Panel.Background). (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource SelectedUnfocusedColor2}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost"> 
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="Expander"  Style="{DynamicResource ExpandCollapseToggleStyle}" ClickMode="Press"  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalAlignment="Center">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"  Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="20" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--滚动条把手样式-->
        <Style x:Key="滚动条把手样式" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <!--滚动条颜色-->
                            <Border Background="{DynamicResource 一级边框颜色}"/>
                            <!--CornerRadius="3"-->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--水平滚动条按钮样式-->
        <Style x:Key="水平滚动条按钮样式" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--垂直滚动条按钮样式-->
        <Style x:Key="垂直滚动条按钮样式" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--垂直滚动条上下按钮2-->
        <Style x:Key="垂直滚动条上下按钮2" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity"  Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="#90000000" Width="0" Height="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBar样式-->
        <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="MinWidth" Value="8"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <RepeatButton  Grid.Row="0" Style="{DynamicResource 垂直滚动条上下按钮2}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            <Track x:Name="PART_Track"   Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource 垂直滚动条按钮样式}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource 垂直滚动条按钮样式}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource 滚动条把手样式}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Style="{DynamicResource 垂直滚动条上下按钮2}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Height" Value="5"/>
                    <Setter Property="MinHeight" Value="5"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Opacity" Value="0.2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource 水平滚动条按钮样式}"  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource 水平滚动条按钮样式}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource 滚动条把手样式}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--ScrollView样式-->
        <Style x:Key="for_scrollviewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                       Style="{DynamicResource for_scrollbar}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                       Style="{DynamicResource for_scrollbar}" VerticalAlignment="Bottom" Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ScrollChanged" >
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="16" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="8" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity"  To="0.2" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="16" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="8" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="16" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="8" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="16" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="8" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--默认ScrollBar样式-->
        <Style TargetType="ScrollBar" BasedOn="{StaticResource for_scrollbar}"/>
        <!--默认ScrollView样式-->
        <Style TargetType="ScrollViewer" BasedOn="{StaticResource for_scrollviewer}"/>

    </Window.Resources>

    <Grid x:Name="MainGrid">
        <DockPanel>
            <!--左-->
            <DockPanel x:Name="PanLeft" Background="{DynamicResource 二级背景颜色}" >
                <StackPanel DockPanel.Dock="Top">
                    <Button x:Name="BtnFold" Content="{DynamicResource 折叠}" Style="{DynamicResource 菜单按钮样式}" Click="BtnFold_Click" BorderThickness="4,0,0,0"/>
                    <Button x:Name="BtnFile" Content="{DynamicResource 书籍}" Style="{DynamicResource 菜单按钮样式}" Click="BtnFile_Click" BorderThickness="4,0,0,0"/>
                    <Button x:Name="BtnEdit" Content="{DynamicResource 编辑}" Style="{DynamicResource 菜单按钮样式}" Click="BtnEdit_Click"/>
                    <Button x:Name="BtnSetting" Content="{DynamicResource 设置}" Style="{DynamicResource 菜单按钮样式}" Click="BtnSetting_Click"/>
                    <Button x:Name="BtnAbout" Content="{DynamicResource 关于}" Style="{DynamicResource 菜单按钮样式}" Click="BtnAbout_Click"/>
                </StackPanel>
                <WrapPanel Orientation="Vertical">
                    <WrapPanel  x:Name="BtnsFile" Orientation="Vertical">
                        <Button x:Name="BtnOpenBook" Content="打开" ToolTip="{DynamicResource 打开书籍}" Style="{DynamicResource 工具按钮样式}" Click="BtnOpenBook_Click"/>
                        <Button x:Name="BtnCrete" Content="创建" ToolTip="{DynamicResource 创建书籍}" Style="{DynamicResource 工具按钮样式}" Click="BtnCreate_Click"/>
                        <Button x:Name="BtnCloseBook" Content="关闭" ToolTip="{DynamicResource 关闭书籍}" Style="{DynamicResource 工具按钮样式}" Click="BtnCloseBook_Click" />
                        <Button x:Name="BtnExport" Content="导出" ToolTip="{DynamicResource 导出全文}" Style="{DynamicResource 工具按钮样式}" Click="BtnExport_Click" />
                        <Button x:Name="BtnBookInfo" Content="信息" ToolTip="{DynamicResource 书籍信息}" Style="{DynamicResource 工具按钮样式}" Click="BtnBookInfo_Click" />
                        <Button x:Name="BtnSave" Content="保存" ToolTip="{DynamicResource 保存文章}" Style="{DynamicResource 工具按钮样式}" Click="BtnSave_Click" />
                        <Button x:Name="BtnSaveAs" Content="另存" ToolTip="{DynamicResource 另存文章}" Style="{DynamicResource 工具按钮样式}" Click="BtnSaveAs_Click" />
                    </WrapPanel>
                    <WrapPanel  x:Name="BtnsEdit" Orientation="Vertical" Visibility="Collapsed">
                        <Button x:Name="BtnUndo" Content="撤销" ToolTip="{DynamicResource 撤销}" Style="{DynamicResource 工具按钮样式}" Click="BtnUndo_Click" />
                        <Button x:Name="BtnRedo" Content="重做" ToolTip="{DynamicResource 重做}" Style="{DynamicResource 工具按钮样式}" Click="BtnRedo_Click" />
                        <Button x:Name="BtnCopy" Content="复制" ToolTip="{DynamicResource 复制}" Style="{DynamicResource 工具按钮样式}" Click="BtnCopy_Click" />
                        <Button x:Name="BtnCut" Content="剪切" ToolTip="{DynamicResource 剪切}" Style="{DynamicResource 工具按钮样式}" Click="BtnCut_Click" />
                        <Button x:Name="BtnPaste" Content="粘贴" ToolTip="{DynamicResource 粘贴}" Style="{DynamicResource 工具按钮样式}" Click="BtnPaste_Click" />
                        <Button x:Name="BtnToTraditional" Content="转繁" ToolTip="{DynamicResource 转繁}" Style="{DynamicResource 工具按钮样式}" Click="BtnToTraditional_Click" />
                        <Button x:Name="BtnToSimplified" Content="转简" ToolTip="{DynamicResource 转简}" Style="{DynamicResource 工具按钮样式}" Click="BtnToSimplified_Click" />
                    </WrapPanel>
                    <WrapPanel  x:Name="BtnsSetting" Orientation="Vertical" Visibility="Collapsed">
                        <Button x:Name="BtnReset" Content="重置" ToolTip="{DynamicResource 重置}" Style="{DynamicResource 工具按钮样式}" Click="BtnReset_Click"/>
                        <Button x:Name="BtnApply" Content="应用" ToolTip="{DynamicResource 应用}" Style="{DynamicResource 工具按钮样式}" Click="BtnApply_Click"/>
                        <Button x:Name="BtnClearRunInfo" Content="清空" ToolTip="{DynamicResource 清空运行信息}" Style="{DynamicResource 工具按钮样式}" Click="BtnClearRunInfo_Click"/>
                    </WrapPanel>
                    <WrapPanel  x:Name="BtnsAbout" Orientation="Vertical" Visibility="Collapsed">
                        <Button x:Name="BtnHomePage" Content="官网" ToolTip="{DynamicResource 官方网站}" Style="{DynamicResource 工具按钮样式}" Click="BtnHomePage_Click"/>
                        <Button x:Name="BtnInfoPage" Content="主页" ToolTip="{DynamicResource 应用主页}" Style="{DynamicResource 工具按钮样式}" Click="BtnInfoPage_Click" />
                        <Button x:Name="BtnCheckNew" Content="更新" ToolTip="{DynamicResource 检查更新}" Style="{DynamicResource 工具按钮样式}" Click="BtnCheckNew_Click"/>
                        <Button x:Name="BtnDownloadPage" Content="反馈" ToolTip="{DynamicResource 提交反馈}" Style="{DynamicResource 工具按钮样式}" Click="BtnDownloadPage_Click"/>
                        <Button x:Name="BtnGitHubPage" Content="GitHub" ToolTip="{DynamicResource GitHub}" Style="{DynamicResource 工具按钮样式}" Click="BtnGitHubPage_Click"/>
                        <Button x:Name="BtnQQGroup" Content="QQ群" ToolTip="{DynamicResource QQ交流群}" Style="{DynamicResource 工具按钮样式}" Click="BtnQQGroup_Click"/>
                        <Button x:Name="BtnBitCoinAddress" Content="赞助" ToolTip="{DynamicResource 赞助}" Style="{DynamicResource 工具按钮样式}" Click="BtnBitCoinAddress_Click"/>
                    </WrapPanel>
                </WrapPanel>
            </DockPanel>
            <!--中-->
            <Grid x:Name="PanCenter" Background="{DynamicResource 二级背景颜色}" Width="240">
                <DockPanel x:Name="CenterBookPage">
                    <ComboBox x:Name="Books" Style="{DynamicResource 下拉框样式}"  ToolTip="最近打开过的书籍列表" DockPanel.Dock="Top"
                              SelectionChanged="Books_SelectionChanged" FontSize="18" FontWeight="Bold" Height="40" BorderThickness="0" Margin="0"/>
                    <WrapPanel Style="{DynamicResource 水平流式面板样式}" DockPanel.Dock="Top" Margin="0" >
                        <Button x:Name="BtnExpand" Content="展开" ToolTip="{DynamicResource 展开}" Style="{DynamicResource 自由按钮样式}" Click="BtnExpand_Click" />
                        <Button x:Name="BtnCollapse" Content="收起" ToolTip="{DynamicResource 收起}" Style="{DynamicResource 自由按钮样式}" Click="BtnCollapse_Click" />
                        <Button x:Name="BtnRefresh" Content="刷新" ToolTip="{DynamicResource 刷新}" Style="{DynamicResource 自由按钮样式}" Click="BtnRefresh_Click" />
                        <Button x:Name="BtnDelete" Content="删除" ToolTip="{DynamicResource 删除目标}" Style="{DynamicResource 自由按钮样式}" Click="BtnDelete_Click" />
                    </WrapPanel>
                    <StackPanel x:Name="PanCreate" DockPanel.Dock="Bottom" Visibility="Collapsed">
                        <TextBox x:Name="TbxCreatePath" Style="{DynamicResource 文本输入框样式}" ToolTip="位置" TextChanged="TbxCreatePath_TextChanged" TextWrapping="Wrap" Height="Auto" MinHeight="30"/>
                        <DockPanel>
                            <Button x:Name="BtnBrowse" Content="更改位置" Style="{DynamicResource 自由按钮样式}" Click="BtnBrowse_Click" DockPanel.Dock="Right" Height="30" Width="80"/>
                            <TextBox x:Name="TbxCreateName" Style="{DynamicResource 文本输入框样式}" ToolTip="名称" TextChanged="TbxCreateName_TextChanged"/>
                        </DockPanel>
                        <WrapPanel Style="{DynamicResource 水平流式面板样式}" ItemWidth="80">
                            <Button x:Name="BtnCreateBook" Content="创建书籍"  Style="{DynamicResource 自由按钮样式}" Click="BtnCreateBook_Click"/>
                            <Button x:Name="BtnCreateChapter" Content="创建卷册" Style="{DynamicResource 自由按钮样式}"  Click="BtnCreateChapter_Click"/>
                            <Button x:Name="BtnCreateEssay" Content="创建文章" Style="{DynamicResource 自由按钮样式}" Click="BtnCreateEssay_Click"/>
                        </WrapPanel>
                    </StackPanel>
                    <TreeView x:Name="FilesTree" Style="{DynamicResource 树状图样式}" SelectedItemChanged="FilesTree_SelectedItemChanged" MouseDoubleClick="FilesTree_MouseDoubleClick" KeyUp="FilesTree_KeyUp"></TreeView>
                </DockPanel>

                <DockPanel x:Name="CenterEditPage" Visibility="Collapsed">
                    <StackPanel>
                        <DockPanel Margin="5,0">
                            <Label Content="查找替换" Style="{DynamicResource 标题标签样式}" Margin="0"/>
                            <TextBlock x:Name="FindAmount" Text="共计 0 处" Style="{DynamicResource 文本显示框样式}" Margin="10,0,5,0"/>
                        </DockPanel>
                        <TextBox x:Name="TextFind" Style="{DynamicResource 文本输入框样式}"/>
                        <TextBox x:Name="TextReplace" Style="{DynamicResource 文本输入框样式}"/>
                        <WrapPanel Style="{DynamicResource 水平流式面板样式}" ItemWidth="80">
                            <Button x:Name="BtnFindNext" Content="查找下一个" Style="{DynamicResource 自由按钮样式}" Click="BtnFindNext_Click"/>
                            <Button x:Name="BtnReplaceNext" Content="替换下一个"  Style="{DynamicResource 自由按钮样式}" Click="BtnReplaceNext_Click"/>
                            <Button x:Name="BtnReplaceAll" Content="替换全部"  Style="{DynamicResource 自由按钮样式}" Click="BtnReplaceAll_Click"/>
                        </WrapPanel>
                    </StackPanel>
                </DockPanel>

                <DockPanel  x:Name="CenterSettingPage" Visibility="Collapsed">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel DockPanel.Dock="Top">
                            <Label Content="{DynamicResource 语言}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbLanguages" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbLanguages_SelectionChanged"/>

                            <Label Content="{DynamicResource 主题}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbThemes" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbThemes_SelectionChanged"/>

                            <Label Content="{DynamicResource 字体}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbFonts" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbFonts_SelectionChanged"/>

                            <Label Content="{DynamicResource 字号}" Style="{DynamicResource 标题标签样式}"/>
                            <TextBox x:Name="TextSize" Style="{DynamicResource 文本输入框样式}" TextChanged="TextSize_TextChanged"/>

                            <Label Content="{DynamicResource 启动}" Style="{DynamicResource 标题标签样式}"/>
                            <CheckBox x:Name="ShowRunInfoCheckBox" Content="{DynamicResource 显示运行信息}" Style="{DynamicResource 检查框样式}" Checked="ShowRunInfo_Checked" Unchecked="ShowRunInfo_Unchecked"/>
                            <CheckBox x:Name="AutoOpenBookCheckBox" Content="{DynamicResource 自动打开书籍}" Style="{DynamicResource 检查框样式}" Checked="AutoOpenBook_Checked" Unchecked="AutoOpenBook_Unchecked"/>

                            <Label Content="{DynamicResource 补全}" Style="{DynamicResource 标题标签样式}"/>
                            <CheckBox x:Name="AutoCompletion" Content="{DynamicResource 自动补全}" Style="{DynamicResource 检查框样式}" Checked="AutoCompletion_Checked" Unchecked="AutoCompletion_Unchecked"/>

                            <Label Content="{DynamicResource 缩进}" Style="{DynamicResource 标题标签样式}"/>
                            <CheckBox x:Name="AutoIndentation" Content="{DynamicResource 自动缩进}" Style="{DynamicResource 检查框样式}" Checked="AutoIndentation_Checked" Unchecked="AutoIndentation_Unchecked"/>
                            <TextBox x:Name="AutoIndentations" Style="{DynamicResource 文本输入框样式}" ToolTip="按回车键保存更改" TextChanged="AutoIndentations_TextChanged"/>

                            <Label Content="{DynamicResource 保存}" Style="{DynamicResource 标题标签样式}"/>
                            <CheckBox x:Name="AutoSaveWhenSwitch" Content="{DynamicResource 文章切换时自动保存}" Style="{DynamicResource 检查框样式}" Checked="AutoSaveWhenSwitch_Checked" Unchecked="AutoSaveWhenSwitch_Unchecked"/>
                            <CheckBox x:Name="AutoSaveEvery" Content="{DynamicResource 间隔时间自动保存}" Style="{DynamicResource 检查框样式}" Checked="AutoSaveEvery_Checked" Unchecked="AutoSaveEvery_Unchecked"/>
                            <TextBox x:Name="AutoSaveTime" Style="{DynamicResource 文本输入框样式}" ToolTip="按回车键保存更改" TextChanged="AutoSaveTime_TextChanged"/>

                            <Label Content="{DynamicResource 备份}" Style="{DynamicResource 标题标签样式}"/>
                            <CheckBox x:Name="AutoBackup" Content="{DynamicResource 间隔时间自动备份}" Style="{DynamicResource 检查框样式}" Checked="AutoBackup_Checked" Unchecked="AutoBackup_Unchecked"/>
                            <TextBox x:Name="AutoBackupTime" Style="{DynamicResource 文本输入框样式}" ToolTip="按回车键保存更改" TextChanged="AutoBackupTime_TextChanged"/>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>

                <DockPanel x:Name="CenterAboutPage" Visibility="Collapsed">
                    <StackPanel DockPanel.Dock="Top">
                        <Label Content="{DynamicResource 名称}" Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="ThisName" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 说明}" Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="Description" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 作者}" Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="Developer" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 版本}"  Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="Version" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 更新日志}" Style="{DynamicResource 标题标签样式}"/>
                    </StackPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <TextBlock x:Name="UpdateNote" Text="?" Style="{DynamicResource 文本显示框样式}" TextWrapping="Wrap" VerticalAlignment="Top"/>
                    </ScrollViewer>
                </DockPanel>
            </Grid>
            <!--右-->
            <DockPanel x:Name="PanRight" Background="{DynamicResource 二级背景颜色}" Margin="0">
                <TextBox x:Name="TbxFileName" Text="标题" Style="{DynamicResource 文本输入框样式}" Margin="0" FontSize="20" Background="{x:Null}" DockPanel.Dock="Top"
                         ToolTip="当前未选中任何文件" GotFocus="TbxFileName_GotFocus" KeyUp="TbxFileName_KeyUp" BorderThickness="0" Height="40" Padding="5,7"/>
                <DockPanel DockPanel.Dock="Bottom" Height="30">
                    <TextBlock x:Name="Words" Text="字数：0" Style="{DynamicResource 文本显示框样式}" MaxWidth="100" DockPanel.Dock="Right" HorizontalAlignment="Right"/>
                    <TextBlock x:Name="RowAndColumn" Text="行：0，列：0" Style="{DynamicResource 文本显示框样式}" MaxWidth="150" DockPanel.Dock="Right" HorizontalAlignment="Right"/>
                    <TextBlock x:Name="HelpMessage" Text="帮助消息" Style="{DynamicResource 文本显示框样式}" HorizontalAlignment="Left"/>
                </DockPanel>
                <TextBox x:Name="TbxFileContent" Style="{DynamicResource 文本输入框样式}" VerticalScrollBarVisibility="Auto"
                         AcceptsReturn="true" TextWrapping="Wrap" Padding="5" BorderThickness="0" Height="Auto" Margin="0"
                         TextChanged="TbxFileContent_TextChanged" KeyUp="TbxFileContent_KeyUp" SelectionChanged="TbxFileContent_SelectionChanged" SizeChanged="TbxFileContent_SizeChanged"
                         LostFocus="TbxFileContent_LostFocus" PreviewTextInput="TbxFileContent_PreviewTextInput" VerticalContentAlignment="Top"/>
            </DockPanel>
        </DockPanel>
    </Grid>
</Window>
