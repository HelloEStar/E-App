<Window x:Name="Main" x:Class="E.Player.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:E.Player"
        mc:Ignorable="d"
        Title="E Player" Height="600" Width="900" MinWidth="900" MinHeight="600" AllowDrop="True"  Icon="图片/E Player.ico" WindowStartupLocation="CenterScreen"
        Loaded="Main_Loaded" Closing="Main_Closing" KeyUp="Main_KeyUp" MouseRightButtonUp="Main_MouseRightButtonUp">

    <!--自定义控件模板-->
    <Window.Resources>
        <!--颜色-->
        <SolidColorBrush x:Key="一级字体颜色" Color="Black" />
        <SolidColorBrush x:Key="二级字体颜色" Color="#FF3C3C3C" />
        <SolidColorBrush x:Key="三级字体颜色" Color="#FF787878" />
        <SolidColorBrush x:Key="一级背景颜色" Color="Gainsboro" />
        <SolidColorBrush x:Key="二级背景颜色" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="三级背景颜色" Color="White" />
        <SolidColorBrush x:Key="一级边框颜色" Color="#FFA0A0A0" />
        <SolidColorBrush x:Key="有焦点选中颜色" Color="#7F007FFF"/>
        <SolidColorBrush x:Key="无焦点选中颜色" Color="#7F7FC8FF"/>

        <!--按钮样式-->
        <Style x:Key="菜单按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource 一级边框颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="border" Property="BorderThickness" Value="6,0,0,0"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="工具按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="自由按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--标签样式-->
        <Style x:Key="标题标签样式" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="自由标签样式" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--检查框样式-->
        <Style x:Key="检查框样式" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>

        <!--下拉框样式-->
        <Style x:Key="下拉框样式" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

            <Setter Property="ItemContainerStyle" Value="{DynamicResource 下拉框子项样式}"/>
            <Setter Property="Template" Value="{DynamicResource 下拉框模板}"/>
        </Style>
        <!--下拉框模板-->
        <ControlTemplate x:Key="下拉框模板" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource 一级边框颜色}" BorderThickness="1" Background="{DynamicResource 三级背景颜色}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" Background="{DynamicResource 三级背景颜色}"/>
                                <!--<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <!--CornerRadius="4"-->
                    <Grid>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource 下拉框切换按钮样式}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">  
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>  
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>  
                    </Trigger>-->
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="60"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--下拉框切换按钮样式-->
        <Style x:Key="下拉框切换按钮样式" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="splitBorder" Width="30" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" 
                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" Stretch="Fill" Height="10" Width="12" HorizontalAlignment="Center" Fill="{DynamicResource 三级字体颜色}" Data="M 50,50 L 0,0 100,0 z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource 三级字体颜色}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 下拉框子项样式 -->
        <Style x:Key="下拉框子项样式" TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Back" BorderThickness="0,0,0,0">
                            <ContentPresenter ContentSource="{Binding Source}" HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="{DynamicResource 无焦点选中颜色}"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="{DynamicResource 有焦点选中颜色}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--文本输入框样式-->
        <Style x:Key="文本输入框样式" TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!--文本显示框样式-->
        <Style x:Key="文本显示框样式" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource 二级字体颜色}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
        </Style>

        <!--流式面板样式-->
        <Style x:Key="水平流式面板样式" TargetType="WrapPanel">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="ItemWidth" Value="60"/>
            <Setter Property="ItemHeight" Value="30"/>
        </Style>
        
        <!--列表子项样式-->
        <Style x:Key="列表子项样式" TargetType="ListBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="238"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!--滚动条把手样式-->
        <Style x:Key="滚动条把手样式" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <!--滚动条颜色-->
                            <Border Background="{DynamicResource 一级边框颜色}"/>
                            <!--CornerRadius="3"-->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--水平滚动条按钮样式-->
        <Style x:Key="水平滚动条按钮样式" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--垂直滚动条按钮样式-->
        <Style x:Key="垂直滚动条按钮样式" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--垂直滚动条上下按钮2-->
        <Style x:Key="垂直滚动条上下按钮2" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity"  Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="#90000000" Width="0" Height="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBar样式-->
        <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="MinWidth" Value="8"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <RepeatButton  Grid.Row="0" Style="{DynamicResource 垂直滚动条上下按钮2}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            <Track x:Name="PART_Track"   Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource 垂直滚动条按钮样式}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource 垂直滚动条按钮样式}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource 滚动条把手样式}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Style="{DynamicResource 垂直滚动条上下按钮2}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Height" Value="5"/>
                    <Setter Property="MinHeight" Value="5"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Opacity" Value="0.2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource 水平滚动条按钮样式}"  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource 水平滚动条按钮样式}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource 滚动条把手样式}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--ScrollView样式-->
        <Style x:Key="for_scrollviewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                       Style="{DynamicResource for_scrollbar}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                       Style="{DynamicResource for_scrollbar}" VerticalAlignment="Bottom" Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ScrollChanged" >
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="16" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="8" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity"  To="0.2" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="16" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="8" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="16" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="8" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="16" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="8" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--默认ScrollBar样式-->
        <Style TargetType="ScrollBar" BasedOn="{StaticResource for_scrollbar}"/>
        <!--默认ScrollView样式-->
        <Style TargetType="ScrollViewer" BasedOn="{StaticResource for_scrollviewer}"/>

    </Window.Resources>

    <Grid x:Name="MainGrid">
        <DockPanel>
            <!--菜单-->
            <DockPanel x:Name="PanMenu" Background="{DynamicResource 二级背景颜色}" >
                <StackPanel DockPanel.Dock="Top">
                    <Button x:Name="BtnFold" Content="{DynamicResource 折叠}" ToolTip="{DynamicResource 折叠+}" Style="{DynamicResource 菜单按钮样式}" Click="BtnFold_Click"/>
                    <Button x:Name="BtnMedia" Content="{DynamicResource 媒体}" ToolTip="{DynamicResource 媒体+}" Style="{DynamicResource 菜单按钮样式}" Click="BtnList_Click"/>
                    <Button x:Name="BtnControl" Content="{DynamicResource 控制}" ToolTip="{DynamicResource 控制+}" Style="{DynamicResource 菜单按钮样式}" Click="BtnControl_Click"/>
                    <Button x:Name="BtnSetting" Content="{DynamicResource 设置}" ToolTip="{DynamicResource 设置+}" Style="{DynamicResource 菜单按钮样式}" Click="BtnSetting_Click"/>
                    <Button x:Name="BtnAbout" Content="{DynamicResource 关于}" ToolTip="{DynamicResource 关于+}" Style="{DynamicResource 菜单按钮样式}" Click="BtnAbout_Click"/>
                </StackPanel>
                <WrapPanel  x:Name="BtnsMedia" Visibility="Visible" Orientation="Vertical">
                    <Button x:Name="BtnOpen" Content="{DynamicResource 打开}" ToolTip="{DynamicResource 打开+}" Style="{DynamicResource 工具按钮样式}" Click="BtnOpen_Click"/>
                    <Button x:Name="BtnAdd" Content="{DynamicResource 添加}" ToolTip="{DynamicResource 添加+}" Style="{DynamicResource 工具按钮样式}" Click="BtnAdd_Click"/>
                    <Button x:Name="BtnRemove" Content="{DynamicResource 删除}" ToolTip="{DynamicResource 删除+}" Style="{DynamicResource 工具按钮样式}" Click="BtnDelete_Click"/>
                    <Button x:Name="BtnClear" Content="{DynamicResource 清空}" ToolTip="{DynamicResource 清空+}" Style="{DynamicResource 工具按钮样式}" Click="BtnClear_Click"/>
                </WrapPanel>
                <WrapPanel  x:Name="BtnsControl" Visibility="Collapsed" Orientation="Vertical">
                    <Button x:Name="BtnLRFlip" Content="{DynamicResource 左右}" ToolTip="{DynamicResource 左右+}" Style="{DynamicResource 工具按钮样式}" Click="BtnLRFlip_Click"/>
                    <Button x:Name="BtnUDFlip" Content="{DynamicResource 上下}" ToolTip="{DynamicResource 上下+}" Style="{DynamicResource 工具按钮样式}" Click="BtnUDFlip_Click"/>
                    <Button x:Name="BtnClockwise" Content="{DynamicResource 顺旋}" ToolTip="{DynamicResource 顺旋+}" Style="{DynamicResource 工具按钮样式}" Click="BtnClockwise_Click"/>
                    <Button x:Name="BtnCClockwise" Content="{DynamicResource 逆旋}" ToolTip="{DynamicResource 逆旋+}" Style="{DynamicResource 工具按钮样式}" Click="BtnCClockwise_Click"/>
                    <Button x:Name="BtnSetLoopStart" Content="{DynamicResource 循起}" ToolTip="{DynamicResource 循起+}" Style="{DynamicResource 工具按钮样式}" Click="BtnLoopStart_Click"/>
                    <Button x:Name="BtnSetLoopEnd" Content="{DynamicResource 循终}" ToolTip="{DynamicResource 循终+}" Style="{DynamicResource 工具按钮样式}" Click="BtnLoopEnd_Click"/>
                    <Button x:Name="BtnClearLoop" Content="{DynamicResource 清循}" ToolTip="{DynamicResource 清循+}" Style="{DynamicResource 工具按钮样式}" Click="BtnClearLoop_Click"/>
                    <Button x:Name="BtnFullScreen" Content="{DynamicResource 全屏}" ToolTip="{DynamicResource 全屏+}" Style="{DynamicResource 工具按钮样式}" Click="BtnFullScreen_Click"/>
                </WrapPanel>
                <WrapPanel  x:Name="BtnsSetting" Visibility="Collapsed" Orientation="Vertical">
                    <Button x:Name="BtnReset" Content="{DynamicResource 重置}" ToolTip="{DynamicResource 重置+}" Style="{DynamicResource 工具按钮样式}" Click="BtnReset_Click"/>
                    <Button x:Name="BtnClearRunInfo" Content="{DynamicResource 清空}" ToolTip="{DynamicResource 清空+}" Style="{DynamicResource 工具按钮样式}" Click="BtnClearRunInfo_Click"/>
                </WrapPanel>
                <WrapPanel  x:Name="BtnsAbout" Visibility="Collapsed" Orientation="Vertical">
                    <Button x:Name="BtnHomePage" Content="{DynamicResource 官网}" ToolTip="{DynamicResource 官网+}" Style="{DynamicResource 工具按钮样式}" Click="BtnHomePage_Click"/>
                    <Button x:Name="BtnInfoPage" Content="{DynamicResource 主页}" ToolTip="{DynamicResource 主页+}" Style="{DynamicResource 工具按钮样式}" Click="BtnInfoPage_Click"/>
                    <Button x:Name="BtnDownloadPage" Content="{DynamicResource 下载}" ToolTip="{DynamicResource 下载+}" Style="{DynamicResource 工具按钮样式}" Click="BtnDownloadPage_Click"/>
                    <Button x:Name="BtnFeedbackPage" Content="{DynamicResource 反馈}" ToolTip="{DynamicResource 反馈+}" Style="{DynamicResource 工具按钮样式}" Click="BtnFeedbackPage_Click"/>
                    <Button x:Name="BtnGitHubPage" Content="{DynamicResource 开源}" ToolTip="{DynamicResource 开源+}" Style="{DynamicResource 工具按钮样式}" Click="BtnGitHubPage_Click"/>
                    <Button x:Name="BtnQQGroup" Content="{DynamicResource 讨论}" ToolTip="{DynamicResource 讨论+}" Style="{DynamicResource 工具按钮样式}" Click="BtnQQGroup_Click"/>
                </WrapPanel>
            </DockPanel>
            <!--面板-->
            <Grid x:Name="PanPanels" Background="{DynamicResource 二级背景颜色}" Width="240" Visibility="Collapsed">
                <DockPanel x:Name="PanMediaList">
                    <ListBox x:Name="LtbMedia" KeyUp="LtbMedia_KeyUp" Drop="PanMediaList_Drop" PreviewMouseMove="PanMediaList_PreviewMouseMove" PreviewDrop="PanMediaList_PreviewDrop" PreviewMouseLeftButtonDown="PanMediaList_PreviewMouseLeftButtonDown" Background="{x:Null}" BorderThickness="0"/>
                </DockPanel>

                <DockPanel  x:Name="PanSetting" Visibility="Collapsed">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel DockPanel.Dock="Top">
                            <Label Content="{DynamicResource 语言}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbLanguages" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbLanguages_SelectionChanged"/>
                            <Label Content="{DynamicResource 主题}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbThemes" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbThemes_SelectionChanged"/>
                            <Label Content="{DynamicResource 模式}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbPlayMode"  Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbPlayMode_SelectionChanged" SelectedIndex="0">
                                <ComboBoxItem Content="{DynamicResource 单次}"/>
                                <ComboBoxItem Content="{DynamicResource 循环}"/>
                                <ComboBoxItem Content="{DynamicResource 顺序}"/>
                                <ComboBoxItem Content="{DynamicResource 随机}"/>
                            </ComboBox>
                            <Label Content="{DynamicResource 视图}" Style="{DynamicResource 标题标签样式}"/>
                            <CheckBox x:Name="CkbKeepTrans" Content="{DynamicResource 保留视频的翻转与旋转效果}" Style="{DynamicResource 检查框样式}" Checked="KeepTrans_Checked" Unchecked="KeepTrans_Unchecked"/>
                            <CheckBox x:Name="CkbSavePlayList" Content="{DynamicResource 退出时保留播放列表}" Style="{DynamicResource 检查框样式}" Checked="SavePlaylist_Checked" Unchecked="SavePlaylist_Unchecked"/>
                            <Label Content="{DynamicResource 跳跃}" Style="{DynamicResource 标题标签样式}" />
                            <TextBox x:Name="JumpTime" Style="{DynamicResource 文本输入框样式}" KeyUp="JumpTime_KeyUp"/>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>

                <DockPanel x:Name="PanAbout" Visibility="Collapsed">
                    <StackPanel DockPanel.Dock="Top">
                        <Label Content="{DynamicResource 名称}" Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="ThisName" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 说明}" Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="Description" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 作者}" Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="Developer" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 版本}"  Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="Version" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                        <Label Content="{DynamicResource 赞助}"  Style="{DynamicResource 标题标签样式}"/>
                        <TextBlock x:Name="BitCoinAddress" Text="?" ToolTip="{DynamicResource 点复}" Style="{DynamicResource 文本显示框样式}" Cursor="Hand" FontSize="10" MouseLeftButtonDown="BitCoinAddress_MouseLeftButtonDown"/>
                        <Label Content="{DynamicResource 日志}" Style="{DynamicResource 标题标签样式}"/>
                    </StackPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <TextBlock x:Name="UpdateNote" Text="?" Style="{DynamicResource 文本显示框样式}" TextWrapping="Wrap" VerticalAlignment="Top"/>
                    </ScrollViewer>
                </DockPanel>
            </Grid>
            <!--内容-->
            <Grid x:Name="PanContent" Background="{DynamicResource 三级背景颜色}" MouseUp="PanContent_MouseUp" Drop="PanContent_Drop">
                <MediaElement x:Name="Media" LoadedBehavior="Manual" Volume="0.5" AllowDrop="True" MediaOpened="MediaPlayer_MediaOpened" MediaEnded="Media_MediaEnded" MouseLeftButtonUp="Media_MouseLeftButtonUp" />
                <Image x:Name="Cover" Margin="0" MouseLeftButtonUp="Media_MouseLeftButtonUp"/>
                <Label x:Name="Message" Content="消息提示" Margin="10,10,10,0" Foreground="{DynamicResource 有焦点选中颜色}" Background="{x:Null}" Height="30" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" Padding="3,0,0,0"/>
                <!--面板-->
                <DockPanel x:Name="PanControl" Height="80" Background="{DynamicResource 二级背景颜色}" Visibility="Collapsed" VerticalAlignment="Bottom" MouseLeave="PanControl_MouseLeave">
                    <DockPanel Height="30" VerticalAlignment="Top" DockPanel.Dock="Top">
                        <Label x:Name="TimePosition" Content="00:00:00" Style="{DynamicResource 自由标签样式}" Width="60" Height="30"/>
                        <Label x:Name="TimeAll" Content="00:00:00"  Style="{DynamicResource 自由标签样式}" Width="60" Height="30" DockPanel.Dock="Right"/>
                        <Slider x:Name="SldTime" IsMoveToPointEnabled="True" Margin="0,6,0,0" VerticalAlignment="Top"
                         Loaded="SldTime_Loaded" Maximum="1" LargeChange="10" SmallChange="5" Cursor="Hand" Focusable="False" AllowDrop="False" IsSelectionRangeEnabled="True" />
                    </DockPanel>
                    <DockPanel Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="160" Margin="0,0,0,10">
                        <Label Content="{DynamicResource 音量}" ToolTip="{DynamicResource 音量+}" Style="{DynamicResource 自由标签样式}" Height="30" Width="60" HorizontalContentAlignment="Center" />
                        <Slider x:Name="SldVolume" IsMoveToPointEnabled="True" SmallChange="0" Value="0.5" Cursor="Hand" ToolTip="0.5" TickFrequency="10" Maximum="1" Margin="0,6,0,0" LargeChange="0" ValueChanged="SldVolume_ValueChanged"/>
                    </DockPanel>
                    <DockPanel Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="160" DockPanel.Dock="Right" Margin="0,0,0,10">
                        <Label Content="{DynamicResource 速度}" ToolTip="{DynamicResource 速度+}"  Style="{DynamicResource 自由标签样式}" Height="30" Width="60" HorizontalContentAlignment="Center"/>
                        <Slider x:Name="SldSpeed" IsMoveToPointEnabled="True" SmallChange="0" Value="1" Cursor="Hand" LargeChange="0" ToolTip="0.5" TickFrequency="10" Maximum="2" Margin="0,6,0,0" ValueChanged="SldSpeed_ValueChanged" MouseLeftButtonUp="SldSpeed_MouseLeftButtonUp" Minimum="0.1"/>
                    </DockPanel>
                    <StackPanel Margin="0,5" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                        <Button x:Name="BtnLast" Content="{DynamicResource 上个}" ToolTip="{DynamicResource 上个+}" Style="{DynamicResource 工具按钮样式}" Click="BtnLast_Click"/>
                        <Button x:Name="BtnBack" Content="{DynamicResource 快退}" ToolTip="{DynamicResource 快退+}" Style="{DynamicResource 工具按钮样式}" Click="BtnBack_Click"/>
                        <Button x:Name="BtnReplay" Content="{DynamicResource 重播}" ToolTip="{DynamicResource 重播+}" Style="{DynamicResource 工具按钮样式}" Click="BtnReplay_Click"/>
                        <Button x:Name="BtnPlay" Content="{DynamicResource 播放}" ToolTip="{DynamicResource 播放+}" Style="{DynamicResource 工具按钮样式}" Click="BtnPlay_Click"/>
                        <Button x:Name="BtnStop" Content="{DynamicResource 停止}" ToolTip="{DynamicResource 停止+}" Style="{DynamicResource 工具按钮样式}" Click="BtnStop_Click"/>
                        <Button x:Name="BtnForward" Content="{DynamicResource 快进}" ToolTip="{DynamicResource 快进+}" Style="{DynamicResource 工具按钮样式}" Click="BtnForward_Click"/>
                        <Button x:Name="BtnNext" Content="{DynamicResource 下个}" ToolTip="{DynamicResource 下个+}" Style="{DynamicResource 工具按钮样式}" Click="BtnNext_Click"/>
                    </StackPanel>
                </DockPanel>
                <Grid x:Name="Trigger" Background="#00000000" Height="80" VerticalAlignment="Bottom" MouseEnter="Grid_MouseEnter"/>
            </Grid>
        </DockPanel>
     </Grid>
</Window>