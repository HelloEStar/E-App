<Window x:Name="Main" x:Class="E.Number.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:E.Number"
        xmlns:Properties="clr-namespace:E.Number.Properties"
        mc:Ignorable="d"
        Title="E Number" Height="450" Width="800" MinWidth="600" MinHeight="450" Icon="图片/E Number.ico" BorderThickness="0" WindowStartupLocation="CenterScreen" Loaded="Main_Loaded" Closing="Main_Closing" KeyUp="Main_KeyUp">

    <!--自定义控件模板-->
    <Window.Resources>
        <!--设置-->
        <Properties:Settings x:Key="Settings" />

        <!--颜色-->
        <SolidColorBrush x:Key="一级字体颜色" Color="Black" />
        <SolidColorBrush x:Key="二级字体颜色" Color="#FF3C3C3C" />
        <SolidColorBrush x:Key="三级字体颜色" Color="#FF787878" />
        <SolidColorBrush x:Key="一级背景颜色" Color="Gainsboro" />
        <SolidColorBrush x:Key="二级背景颜色" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="三级背景颜色" Color="White" />
        <SolidColorBrush x:Key="一级边框颜色" Color="#FFA0A0A0" />
        <SolidColorBrush x:Key="有焦点选中颜色" Color="#7F007FFF"/>
        <SolidColorBrush x:Key="无焦点选中颜色" Color="#7F7FC8FF"/>
        <Color x:Key="树状图子项有焦点选中颜色">#7F007FFF</Color>
        <Color x:Key="树状图子项无焦点选中颜色">#7F7FC8FF</Color>

        <!--菜单栏样式-->
        <Style x:Key="菜单栏样式" TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="Width" Value="40"/>
        </Style>
        <!--工具栏样式-->
        <Style x:Key="工具栏样式" TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="Width" Value="240"/>
        </Style>
        <!--工作区样式-->
        <Style x:Key="工作区样式" TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
        </Style>

        <!--流式面板样式-->
        <Style x:Key="水平流式面板样式" TargetType="WrapPanel">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ItemWidth" Value="60"/>
            <Setter Property="ItemHeight" Value="30"/>
        </Style>

        <!--按钮样式-->
        <Style x:Key="菜单按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource 一级边框颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级边框颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="自由按钮样式" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 一级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 三级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="自由按钮样式反色" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 二级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource 三级背景颜色}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="text" Property="Foreground" Value="{DynamicResource 三级字体颜色}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--标签样式-->
        <Style x:Key="标题标签样式" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="自由标签样式" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!--文本框样式-->
        <Style x:Key="文本输入框样式" TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="文本显示框样式" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource 二级字体颜色}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!--检查框样式-->
        <Style x:Key="检查框样式" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>

        <!--下拉框样式-->
        <Style x:Key="下拉框样式" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{DynamicResource 一级背景颜色}"/>
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

            <Setter Property="ItemContainerStyle" Value="{DynamicResource 下拉框子项样式}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource 一级边框颜色}" BorderThickness="1" Background="{DynamicResource 三级背景颜色}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" Background="{DynamicResource 三级背景颜色}"/>
                                            <!--<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <!--CornerRadius="4"-->
                                <Grid>
                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource 下拉框切换按钮样式}"/>
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">  
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>  
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>  
                    </Trigger>-->
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Height" TargetName="dropDownBorder" Value="60"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="下拉框切换按钮样式" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="splitBorder" Width="30" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" 
                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" Stretch="Fill" Height="10" Width="12" HorizontalAlignment="Center" Fill="{DynamicResource 三级字体颜色}" Data="M 50,50 L 0,0 100,0 z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource 三级字体颜色}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="下拉框子项样式" TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Background" Value="{DynamicResource 三级背景颜色}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Back" BorderThickness="0,0,0,0">
                            <ContentPresenter ContentSource="{Binding Source}" HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="{DynamicResource 无焦点选中颜色}"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="{DynamicResource 有焦点选中颜色}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--列表子项样式-->
        <Style x:Key="列表子项样式" TargetType="ListBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="238"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!--滚动视图样式-->
        <Style x:Key="滚动视图样式" TargetType="{x:Type ScrollViewer}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                       Style="{DynamicResource 滚动条样式}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                       Style="{DynamicResource 滚动条样式}" VerticalAlignment="Bottom" Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ScrollChanged" >
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="16" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="8" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity"  To="0.2" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="16" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="8" Duration="0:0:0.25" BeginTime="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="16" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Width" To="8" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="16" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.25"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Height" To="8" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--设置所有滚动视图默认为“滚动视图样式”-->
        <Style TargetType="ScrollViewer" BasedOn="{StaticResource 滚动视图样式}"/>

        <!--滚动条样式-->
        <Style x:Key="滚动条样式" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="MinWidth" Value="8"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <RepeatButton  Grid.Row="0" Style="{DynamicResource 垂直滚动条上下按钮2}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            <Track x:Name="PART_Track"   Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource 垂直滚动条按钮样式}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource 垂直滚动条按钮样式}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource 滚动条把手样式}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Style="{DynamicResource 垂直滚动条上下按钮2}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Height" Value="5"/>
                    <Setter Property="MinHeight" Value="5"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Opacity" Value="0.2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource 水平滚动条按钮样式}"  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{DynamicResource 水平滚动条按钮样式}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource 滚动条把手样式}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--设置所有滚动条默认为“滚动条样式”-->
        <Style TargetType="ScrollBar" BasedOn="{StaticResource 滚动条样式}"/>

        <!--滚动条组件样式-->
        <Style x:Key="滚动条把手样式" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <!--滚动条颜色-->
                            <Border Background="{DynamicResource 一级边框颜色}"/>
                            <!--CornerRadius="3"-->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="水平滚动条按钮样式" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="垂直滚动条按钮样式" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="垂直滚动条上下按钮2" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Opacity"  Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="#90000000" Width="0" Height="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--滑块样式-->
        <Style x:Key="滑块样式" TargetType="Slider">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="TickPlacement" Value="Both"/>
            <Setter Property="Ticks" Value="0, 0.25, 0.5, 0.75, 1"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Maximum" Value="1"/>
            <Setter Property="SmallChange" Value="0.1"/>
            <!--SmallChange用来当Slider有焦点时，使用键盘的左右箭头来改变值的大小-->
            <Setter Property="LargeChange" Value="1"/>
            <!--LargeChange是点击Slider条的空白部分造成值的改变大小（和滚动条类似）-->
            <Setter Property="IsMoveToPointEnabled" Value="True"/>
            <!--点击空白处是否直接移动到此处-->
        </Style>

        <!--树状图样式-->
        <Style x:Key="树状图样式" TargetType="TreeView">
            <Setter Property="Background" Value="{DynamicResource 二级背景颜色}"/>
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <!--<Setter Property="Padding" Value="0,5"/>-->
            <Setter Property="ItemContainerStyle" Value="{DynamicResource 树状图子项样式}"></Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border" CornerRadius="0" BorderThickness="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                            </Border.Background>
                            <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--树状图ToggleButton样式-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="20"  Height="20" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Data="M 0 0 L 8 5 L 0 10 Z" Fill="{DynamicResource 三级字体颜色}"></Path>
                            <Path x:Name="Expanded" HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="0" Data="M 0 0 L 10 0 L 5 8 Z" Fill="{DynamicResource 三级字体颜色}" Visibility="Hidden"></Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--树状图子项焦点可视样式-->
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeThickness="5" Stroke="Red" StrokeDashArray="1 2" Opacity="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--树状图子项样式-->
        <Style x:Key="树状图子项样式" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource 一级字体颜色}" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />

            <Setter Property="ItemContainerStyle" Value="{DynamicResource 树状图子项样式}"></Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="20"  Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background). (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"  Value="{StaticResource 树状图子项有焦点选中颜色}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"  Storyboard.TargetProperty="(Panel.Background). (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource 树状图子项无焦点选中颜色}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="Expander"  Style="{DynamicResource ExpandCollapseToggleStyle}" ClickMode="Press"  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalAlignment="Center">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"  Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="20" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--时间间隔转换器-->
        <local:TimeSpanDoubleConverter x:Key="时间间隔转换器"/>
    </Window.Resources>

    <Grid x:Name="GrdMain">
        <DockPanel>
            <!--菜单栏-->
            <Grid x:Name="PanMenu" Style="{DynamicResource 菜单栏样式}" >
                <DockPanel>
                    <StackPanel>
                        <Button x:Name="BtnFile" Content="{DynamicResource 记录}" Style="{DynamicResource 菜单按钮样式}" Click="BtnFile_Click" BorderThickness="4,0,0,0"/>
                        <Button x:Name="BtnSetting" Content="{DynamicResource 设置}" Style="{DynamicResource 菜单按钮样式}" Click="BtnSetting_Click"/>
                        <Button x:Name="BtnAbout" Content="{DynamicResource 关于}" Style="{DynamicResource 菜单按钮样式}" Click="BtnAbout_Click"/>
                    </StackPanel>
                </DockPanel>
            </Grid>

            <!--工具栏-->
            <!--工具栏 文件-->
            <Grid x:Name="PanFile" Style="{DynamicResource 工具栏样式}" >
                <DockPanel>
                    <WrapPanel Style="{DynamicResource 水平流式面板样式}" DockPanel.Dock="Bottom" ItemWidth="240">
                        <Button x:Name="BtnClear"  Style="{DynamicResource 自由按钮样式}" Content="{DynamicResource 清空}" ToolTip="{DynamicResource 清空+}" Click="BtnClear_Click"/>
                    </WrapPanel>
                    <ListBox x:Name="LtbRecord" Background="{x:Null}" BorderThickness="0"/>
                </DockPanel>
            </Grid>
            <!--工具栏 编辑-->
            <!--<Grid x:Name="PanEdit" Style="{DynamicResource 工具栏样式}" >
            </Grid>-->
            <!--工具栏 设置-->
            <Grid x:Name="PanSetting" Style="{DynamicResource 工具栏样式}" Visibility="Collapsed" >
                <DockPanel>
                    <WrapPanel Style="{DynamicResource 水平流式面板样式}" DockPanel.Dock="Bottom" ItemWidth="120">
                        <Button x:Name="BtnSaveSettings" Content="{DynamicResource 保存}" ToolTip="{DynamicResource 重置+}" Style="{DynamicResource 自由按钮样式}" Click="BtnSaveSettings_Click"/>
                        <Button x:Name="BtnResetSettings" Content="{DynamicResource 重置}" ToolTip="{DynamicResource 重置+}" Style="{DynamicResource 自由按钮样式}" Click="BtnResetSettings_Click"/>
                    </WrapPanel>

                    <ScrollViewer>
                        <StackPanel DockPanel.Dock="Top">
                            <Label Content="{DynamicResource 语言}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbLanguages" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbLanguages_SelectionChanged"
                                      SelectedIndex="{Binding Source={StaticResource Settings}, Path=Default.Language,Mode=TwoWay}"/>

                            <Label Content="{DynamicResource 主题}" Style="{DynamicResource 标题标签样式}"/>
                            <ComboBox x:Name="CbbThemes" Style="{DynamicResource 下拉框样式}" SelectionChanged="CbbThemes_SelectionChanged"
                                      SelectedIndex="{Binding Source={StaticResource Settings}, Path=Default.Theme,Mode=TwoWay}"/>

                            <Label Content="{DynamicResource 最小}" Style="{DynamicResource 标题标签样式}"/>
                            <TextBox x:Name="TxtMinValue" Style="{DynamicResource 文本输入框样式}" TextChanged="TxtMinValue_TextChanged" Loaded="TxtMinValue_Loaded"/>

                            <Label Content="{DynamicResource 最大}" Style="{DynamicResource 标题标签样式}"/>
                            <TextBox x:Name="TxtMaxValue" Style="{DynamicResource 文本输入框样式}" TextChanged="TxtMaxValue_TextChanged" Loaded="TxtMaxValue_Loaded"/>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </Grid>
            <!--工具栏 关于-->
            <Grid x:Name="PanAbout" Style="{DynamicResource 工具栏样式}" Visibility="Collapsed">
                <Grid Style="{DynamicResource 工具栏样式}">
                    <ScrollViewer>
                        <StackPanel DockPanel.Dock="Top">
                            <DockPanel>
                                <Button x:Name="BtnHomePage" Content="{DynamicResource 前往}" ToolTip="F1" Style="{DynamicResource 自由按钮样式}" Click="BtnHomePage_Click" DockPanel.Dock="Right" Width="80"/>
                                <Label Content="{DynamicResource 官网}" Style="{DynamicResource 标题标签样式}"/>
                            </DockPanel>
                            <TextBlock x:Name="TxtHomePage" Text="?" Style="{DynamicResource 文本显示框样式}"/>

                            <DockPanel>
                                <Button x:Name="BtnGitHubPage" Content="{DynamicResource 前往}" ToolTip="F2" Style="{DynamicResource 自由按钮样式}" Click="BtnGitHubPage_Click" DockPanel.Dock="Right" Width="80"/>
                                <Label Content="{DynamicResource 开源}" Style="{DynamicResource 标题标签样式}"/>
                            </DockPanel>
                            <TextBlock x:Name="TxtGitHubPage" Text="?" Style="{DynamicResource 文本显示框样式}"/>

                            <DockPanel>
                                <Button x:Name="BtnQQGroup" Content="{DynamicResource 前往}" ToolTip="F3" Style="{DynamicResource 自由按钮样式}" Click="BtnQQGroup_Click" DockPanel.Dock="Right" Width="80"/>
                                <Label Content="{DynamicResource 讨论}" Style="{DynamicResource 标题标签样式}"/>
                            </DockPanel>
                            <TextBlock x:Name="TxtQQGroup" Text="?" Style="{DynamicResource 文本显示框样式}"/>

                            <DockPanel>
                                <Button x:Name="BtnBitCoinAddress" Content="{DynamicResource 复制}" Style="{DynamicResource 自由按钮样式}" Click="BtnBitCoinAddress_Click" DockPanel.Dock="Right" Width="80"/>
                                <Label Content="{DynamicResource 赞助}"  Style="{DynamicResource 标题标签样式}"/>
                            </DockPanel>
                            <TextBlock x:Name="TxtBitCoinAddress" Text="?" Style="{DynamicResource 文本显示框样式}"/>

                            <Label Content="{DynamicResource 名称}" Style="{DynamicResource 标题标签样式}"/>
                            <TextBlock x:Name="TxtThisName" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                            <Label Content="{DynamicResource 说明}" Style="{DynamicResource 标题标签样式}"/>
                            <TextBlock x:Name="TxtDescription" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                            <Label Content="{DynamicResource 作者}" Style="{DynamicResource 标题标签样式}"/>
                            <TextBlock x:Name="TxtDeveloper" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                            <Label Content="{DynamicResource 版本}"  Style="{DynamicResource 标题标签样式}"/>
                            <TextBlock x:Name="TxtVersion" Text="?" Style="{DynamicResource 文本显示框样式}"/>
                            <Label Content="{DynamicResource 日志}" Style="{DynamicResource 标题标签样式}"/>

                            <TextBlock x:Name="TxtUpdateNote" Text="?" Style="{DynamicResource 文本显示框样式}" TextWrapping="Wrap"/>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

            </Grid>

            <!--工作区-->
            <Grid x:Name="PanWorkArea" Style="{DynamicResource 工作区样式}">
                <DockPanel>
                    <Button x:Name="BtnCreate" Content="生成" Style="{DynamicResource 自由按钮样式}" Margin="0" Height="80" Click="BtnCreate_Click" DockPanel.Dock="Bottom" FontSize="40" VerticalAlignment="Bottom"/>
                    <Label x:Name="LblMessage" Content="帮助消息" Style="{DynamicResource 自由标签样式}" DockPanel.Dock="Top" VerticalAlignment="Top" HorizontalContentAlignment="Center" Margin="10,0"/>
                    <TextBox x:Name="TxtValue" Style="{DynamicResource 文本输入框样式}" FontSize="200" IsReadOnly="True" SelectionBrush="{DynamicResource 有焦点选中颜色}" Text="0" SizeChanged="TxtValue_SizeChanged" Margin="10" HorizontalScrollBarVisibility="Auto" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="Auto" BorderThickness="0"/>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Window>